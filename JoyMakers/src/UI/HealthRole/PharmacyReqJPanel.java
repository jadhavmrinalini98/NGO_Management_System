/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HealthRole;

/**
 *
 * @author Mrinalini
 */
import UI.HealthRole.*;
import Business.Enterprise.Enterprise;
import Business.Medicare;
import Business.Network.Network;
import Business.Organization.DoctorOrg;
import Business.Organization.HealthOrg;
import Business.Organization.Organisation;
import Business.Organization.PharmacyOrg;
//import Business.Organization.VolunteerOrg;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalDoctorWorkReq;
import Business.WorkQueue.HospitalPharmacyWorkReq;
import Business.WorkQueue.HospitalPharmacyWorkReq;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class PharmacyReqJPanel extends javax.swing.JPanel {
    /**
     * Creates new form PharmacyReqJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise ent;
    private UserAccount ua;
    private Network net;
    private String prescription=null;
    
    public PharmacyReqJPanel(JPanel userProcessContainer, UserAccount acc, Enterprise ent, Network net) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ent = ent;
        this.ua = acc;
        this.net = net;
    }
    
    public void populatemedtbl(){
        DefaultTableModel mdl = (DefaultTableModel) tblmed.getModel();
        mdl.setRowCount(0);
        if(ua.getMedList().isEmpty())
            return;
        
        for(Medicare med: ua.getMedList()){
            Object[] row = new Object[2];
            row[0] = med;
            row[1] = med.getMed_quantity();
            mdl.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnreqmed = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        lblstreet = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblmed = new javax.swing.JTable();
        btnadd = new javax.swing.JButton();
        btndel = new javax.swing.JButton();
        btnmod = new javax.swing.JButton();
        lblprescription = new javax.swing.JLabel();
        btnupload = new javax.swing.JButton();
        lblmedname = new javax.swing.JLabel();
        lblquant = new javax.swing.JLabel();
        txtmedname = new javax.swing.JTextField();
        txtquant = new javax.swing.JTextField();
        lblnoimg = new javax.swing.JLabel();
        txtstreet = new javax.swing.JTextField();
        lbladd = new javax.swing.JLabel();
        txtadd = new javax.swing.JTextField();
        lblcity = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        lblstate = new javax.swing.JLabel();
        txtstate = new javax.swing.JTextField();
        lblpin = new javax.swing.JLabel();
        txtpin = new javax.swing.JTextField();
        lbltitle = new javax.swing.JLabel();
        btnupdate = new javax.swing.JButton();
        txtconno = new javax.swing.JTextField();
        lblconno = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));
        setForeground(new java.awt.Color(102, 0, 102));

        btnreqmed.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnreqmed.setForeground(new java.awt.Color(0, 153, 153));
        btnreqmed.setText("Request Medicine");
        btnreqmed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreqmedActionPerformed(evt);
            }
        });

        btnback.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        btnback.setForeground(new java.awt.Color(0, 153, 153));
        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        lblstreet.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblstreet.setForeground(new java.awt.Color(255, 255, 255));
        lblstreet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblstreet.setText("Street:");

        tblmed.setForeground(new java.awt.Color(102, 0, 102));
        tblmed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblmed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmedMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblmed);

        btnadd.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnadd.setForeground(new java.awt.Color(0, 153, 153));
        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btndel.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btndel.setForeground(new java.awt.Color(0, 153, 153));
        btndel.setText("Delete");
        btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelActionPerformed(evt);
            }
        });

        btnmod.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnmod.setForeground(new java.awt.Color(0, 153, 153));
        btnmod.setText("Modify");
        btnmod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodActionPerformed(evt);
            }
        });

        lblprescription.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblprescription.setForeground(new java.awt.Color(255, 255, 255));
        lblprescription.setText("Prescription:");

        btnupload.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnupload.setForeground(new java.awt.Color(0, 153, 153));
        btnupload.setText("Upload");
        btnupload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuploadActionPerformed(evt);
            }
        });

        lblmedname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblmedname.setForeground(new java.awt.Color(255, 255, 255));
        lblmedname.setText("Medicine Name:");

        lblquant.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblquant.setForeground(new java.awt.Color(255, 255, 255));
        lblquant.setText("Quantity:");

        txtmedname.setBackground(new java.awt.Color(204, 204, 204));
        txtmedname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtmedname.setForeground(new java.awt.Color(102, 0, 102));

        txtquant.setBackground(new java.awt.Color(204, 204, 204));
        txtquant.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtquant.setForeground(new java.awt.Color(102, 0, 102));

        lblnoimg.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblnoimg.setForeground(new java.awt.Color(255, 255, 255));
        lblnoimg.setText("No image uploaded");

        txtstreet.setBackground(new java.awt.Color(204, 204, 204));
        txtstreet.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtstreet.setForeground(new java.awt.Color(102, 0, 102));

        lbladd.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lbladd.setForeground(new java.awt.Color(255, 255, 255));
        lbladd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbladd.setText("Area:");

        txtadd.setBackground(new java.awt.Color(204, 204, 204));
        txtadd.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtadd.setForeground(new java.awt.Color(102, 0, 102));

        lblcity.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblcity.setForeground(new java.awt.Color(255, 255, 255));
        lblcity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblcity.setText("City:");

        txtcity.setBackground(new java.awt.Color(204, 204, 204));
        txtcity.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtcity.setForeground(new java.awt.Color(102, 0, 102));

        lblstate.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblstate.setForeground(new java.awt.Color(255, 255, 255));
        lblstate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblstate.setText("State:");

        txtstate.setBackground(new java.awt.Color(204, 204, 204));
        txtstate.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtstate.setForeground(new java.awt.Color(102, 0, 102));

        lblpin.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblpin.setForeground(new java.awt.Color(255, 255, 255));
        lblpin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblpin.setText("Pin:");

        txtpin.setBackground(new java.awt.Color(204, 204, 204));
        txtpin.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtpin.setForeground(new java.awt.Color(102, 0, 102));

        lbltitle.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        lbltitle.setForeground(new java.awt.Color(255, 255, 255));
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("New Pharmacy Request");

        btnupdate.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(0, 153, 153));
        btnupdate.setText("Update");
        btnupdate.setEnabled(false);
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        txtconno.setBackground(new java.awt.Color(204, 204, 204));
        txtconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtconno.setForeground(new java.awt.Color(102, 0, 102));
        txtconno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtconnoActionPerformed(evt);
            }
        });

        lblconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblconno.setForeground(new java.awt.Color(255, 255, 255));
        lblconno.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblconno.setText("Contact Number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnback)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblcity)
                                        .addComponent(lblstate)
                                        .addComponent(lblpin)
                                        .addComponent(lblconno))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtpin, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnreqmed)
                                        .addComponent(txtconno, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblstreet, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lbladd, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtstreet, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblprescription)
                                .addGap(18, 18, 18)
                                .addComponent(lblnoimg)
                                .addGap(18, 18, 18)
                                .addComponent(btnupload, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(135, 135, 135)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnmod, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblmedname, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtmedname, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblquant)
                                            .addComponent(txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(133, 133, 133)
                                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(479, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbltitle)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnmod, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblmedname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmedname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(lblquant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnadd)
                            .addComponent(btnupdate)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblprescription)
                    .addComponent(lblnoimg, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupload))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstreet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbladd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcity)
                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtconno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblconno))
                .addGap(20, 20, 20)
                .addComponent(btnreqmed, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnback)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
 private boolean checkPin(String phoneNumber) {
        Pattern pat = Pattern.compile("^[0-9]{6}$");
        Matcher mat = pat.matcher(phoneNumber);
        return mat.matches();
    }
    private boolean checkPhoneNo(String phoneNumber) {
        Pattern pat = Pattern.compile("^[0-9]{10}$");
        Matcher mat = pat.matcher(phoneNumber);
        return mat.matches();
    }
    private void btnreqmedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreqmedActionPerformed

        HospitalPharmacyWorkReq req = new HospitalPharmacyWorkReq();
        List<Medicare> medList = new ArrayList<Medicare>(ua.getMedList());
        if(medList .isEmpty()){
            JOptionPane.showMessageDialog(null, "No medicines added! Please add a medicine to request.");
            return;
        }
        req.setMedList(medList );
        for(Medicare med:ua.getMedList()){
            ua.getMedicalHistory().add(med);
        }
        String street = txtstreet.getText();
        String area = txtadd.getText();
        String city = txtcity.getText();
        String state = txtstate.getText();
        String pinNo = txtpin.getText();
        if(street == null || street.equals("") || area==null || area.equals("") || city==null || city.equals("") || pinNo==null || pinNo.equals("") || state==null || state.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Address Details");
            return;
        }
        String phNo = txtconno.getText();
        if(phNo == null || phNo.equals("")){
            JOptionPane.showMessageDialog(null, "Contact Number cannot be empty");
            return;
        }
        if(!checkPhoneNo(phNo)){
            JOptionPane.showMessageDialog(null, "Please enter a valid Contact Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!checkPin(pinNo)){
            JOptionPane.showMessageDialog(null, "Please enter a valid Pin Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        req.setPrescription(prescription);
        req.setArea(area);
        req.setCity(city);
        req.setStreet(street);
        req.setState(state);
        req.setPinCode(pinNo);
        req.setSenderNo(phNo);

        String address = street+", "+area+", "+city+", "+state+"- "+pinNo;
        req.setAddress(address);
        req.setSenderAdd(address);

        req.setSender(ua);
        req.setStatus("Sent");
        req.setNgo(ent.getName());
        Organisation organisation = null;
        for(Enterprise e: net.getEntDir().getEntList())
        {
            if(e.getEntType().equals(e.getEntType().Hospital))
            {
                for (Organisation organization : e.getOrgDir().getOrgList())
                {
                    if (organization instanceof PharmacyOrg){
                        organisation = organization;
                        organisation .getWorkQueue().getWrList().add(req);
                    }
                }
            }
        }
        if (organisation !=null){
            ua.getWorkQueue().getWrList().add(req);
        }

        JOptionPane.showMessageDialog(null, "Medcines Request Sent Successfully");

        txtadd.setText("");
        txtcity.setText("");
        txtpin.setText("");
        txtstate.setText("");
        txtstreet.setText("");
        txtconno.setText("");

        DefaultTableModel mdl = (DefaultTableModel) tblmed.getModel();
        mdl.setRowCount(0);

    }//GEN-LAST:event_btnreqmedActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PharmacyWorkAreaJPanel dwjp = (PharmacyWorkAreaJPanel) component;
        dwjp.populateMedReqTbl();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnbackActionPerformed

    private void tblmedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmedMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblmedMouseClicked

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String Nm = txtmedname.getText();
        String quanttxt = txtquant.getText();
        if(Nm ==null || Nm .equals("") || quanttxt.equals("") || quanttxt==null){
            JOptionPane.showMessageDialog(null,"Please enter medicine details to add one.");
            return;
        }
        try{
            Integer.parseInt(txtquant.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a number for Quantity");
            return;
        }
        int quantity = Integer.parseInt(quanttxt);
        if(quantity<=0){
            JOptionPane.showMessageDialog(null, "Please type in a valid quantity");
            return;
        }
        if(!(ua.getMedList()==null)){
            for(Medicare med:ua.getMedList()){
                if(med.getMed_name().equalsIgnoreCase(Nm)){
                    JOptionPane.showMessageDialog(null,"This medicine is already entered in the cart. You can change the quantity of the medicine by selecting it and clicking the MODIFY button");
                    return;
                }
            }
        }
        LocalDate date = LocalDate.now();
        Medicare med = new Medicare(Nm,quantity,date);
        ua.getMedList().add(med);
        txtmedname.setText("");
        txtquant.setText("");
        populatemedtbl();
    }//GEN-LAST:event_btnaddActionPerformed

    private void btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblmed.getSelectedRow();
        if(selectedRow>=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete this medicine?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Medicare med = (Medicare) tblmed.getValueAt(selectedRow, 0);
                ua.getMedList().remove(med);
                populatemedtbl();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btndelActionPerformed

    private void btnmodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblmed.getSelectedRow();
        if(selectedRow>=0){
            Medicare med = (Medicare) tblmed.getValueAt(selectedRow, 0);

            txtmedname.setText(med.getMed_name());
            txtquant.setText(String.valueOf(med.getMed_quantity()));
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        txtmedname.setEditable(true);
        txtquant.setEditable(true);
        btnadd.setEnabled(false);
        btndel.setEnabled(false);
        btnmod.setEnabled(false);
        btnupdate.setEnabled(true);
        tblmed.setEnabled(false);
    }//GEN-LAST:event_btnmodActionPerformed

    private ImageIcon imgResize(String imgPath){
        ImageIcon myImage = new ImageIcon(imgPath);
        Image img = myImage.getImage();
        Image newImage = img.getScaledInstance(45,45, Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }    
    
    private void btnuploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuploadActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);
        //if the user click on save in Jfilechooser
        if(res == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            prescription = path;
            lblnoimg.setText("");
            lblnoimg.setIcon(imgResize(path));
        }
        //if the user click on save in Jfilechooser

        else if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("No File Select");
        }
    }//GEN-LAST:event_btnuploadActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        int selectedRow = tblmed.getSelectedRow();
        Medicare med = (Medicare) tblmed.getValueAt(selectedRow, 0);

        String Nm = txtmedname.getText();
        String quanttxt = txtquant.getText();
        if(Nm==null || Nm.equals("") || quanttxt.equals("") || quanttxt==null){
            JOptionPane.showMessageDialog(null,"Please enter medicine details to add one.");
            return;
        }
        try{
            Integer.parseInt(txtquant.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a number for Quantity");
            return;
        }
        int quantity = Integer.parseInt(quanttxt);

        LocalDate date = LocalDate.now();
        med.setMed_name(Nm);
        med.setMed_quantity(quantity);
        med.setOrdDt(date);
        JOptionPane.showMessageDialog(null, "Medicine details updated successfully");

        txtmedname.setText("");
        txtquant.setText("");
        btnadd.setEnabled(true);
        btndel.setEnabled(true);
        btnmod.setEnabled(true);
        btnupdate.setEnabled(false);
        tblmed.setEnabled(true);
        populatemedtbl();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void txtconnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtconnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtconnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndel;
    private javax.swing.JButton btnmod;
    private javax.swing.JButton btnreqmed;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnupload;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbladd;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lblconno;
    private javax.swing.JLabel lblmedname;
    private javax.swing.JLabel lblnoimg;
    private javax.swing.JLabel lblpin;
    private javax.swing.JLabel lblprescription;
    private javax.swing.JLabel lblquant;
    private javax.swing.JLabel lblstate;
    private javax.swing.JLabel lblstreet;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JTable tblmed;
    private javax.swing.JTextField txtadd;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtconno;
    private javax.swing.JTextField txtmedname;
    private javax.swing.JTextField txtpin;
    private javax.swing.JTextField txtquant;
    private javax.swing.JTextField txtstate;
    private javax.swing.JTextField txtstreet;
    // End of variables declaration//GEN-END:variables
}
