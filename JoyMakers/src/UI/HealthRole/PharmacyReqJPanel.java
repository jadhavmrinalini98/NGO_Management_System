/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HealthRole;

/**
 *
 * @author Mrinalini
 */
import UI.HealthRole.*;
import Model.Enterprise.Enterprise;
import Model.Medicare;
import Model.Network.Network;
import Model.Organization.DoctorOrg;
import Model.Organization.HealthOrg;
import Model.Organization.Organisation;
import Model.Organization.PharmacyOrg;
//import Business.Organization.VolunteerOrg;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.HospitalDoctorWorkReq;
import Model.WorkQueue.HospitalPharmacyWorkReq;
import Model.WorkQueue.HospitalPharmacyWorkReq;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class PharmacyReqJPanel extends javax.swing.JPanel {
    /**
     * Creates new form PharmacyReqJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise ent;
    private UserAccount ua;
    private Network net;
    private String prescription=null;
    
    public PharmacyReqJPanel(JPanel userProcessContainer, UserAccount acc, Enterprise ent, Network net) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ent = ent;
        this.ua = acc;
        this.net = net;
    }
    
    public void populatemedtbl(){
        DefaultTableModel mdl = (DefaultTableModel) JM_tblmed.getModel();
        mdl.setRowCount(0);
        if(ua.getMedList().isEmpty())
            return;
        
        for(Medicare med: ua.getMedList()){
            Object[] row = new Object[2];
            row[0] = med;
            row[1] = med.getMed_quantity();
            mdl.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JM_btnreqmed = new javax.swing.JButton();
        JM_btnback = new javax.swing.JButton();
        JM_lblstreet = new javax.swing.JLabel();
        JM_jScrollPane2 = new javax.swing.JScrollPane();
        JM_tblmed = new javax.swing.JTable();
        JM_btnadd = new javax.swing.JButton();
        JM_btndel = new javax.swing.JButton();
        JM_btnmod = new javax.swing.JButton();
        JM_lblprescription = new javax.swing.JLabel();
        JM_btnupload = new javax.swing.JButton();
        JM_lblmedname = new javax.swing.JLabel();
        JM_lblquant = new javax.swing.JLabel();
        JM_txtmedname = new javax.swing.JTextField();
        JM_txtquant = new javax.swing.JTextField();
        JM_lblnoimg = new javax.swing.JLabel();
        JM_txtstreet = new javax.swing.JTextField();
        JM_lbladd = new javax.swing.JLabel();
        JM_txtadd = new javax.swing.JTextField();
        JM_lblcity = new javax.swing.JLabel();
        JM_txtcity = new javax.swing.JTextField();
        JM_lblstate = new javax.swing.JLabel();
        JM_txtstate = new javax.swing.JTextField();
        JM_lblpin = new javax.swing.JLabel();
        JM_txtpin = new javax.swing.JTextField();
        JM_lbltitle = new javax.swing.JLabel();
        JM_btnupdate = new javax.swing.JButton();
        JM_txtconno = new javax.swing.JTextField();
        JM_lblconno = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));
        setForeground(new java.awt.Color(102, 0, 102));

        JM_btnreqmed.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnreqmed.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnreqmed.setText("Request Medicine");
        JM_btnreqmed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnreqmedActionPerformed(evt);
            }
        });

        JM_btnback.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        JM_btnback.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnback.setText("<< Back");
        JM_btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnbackActionPerformed(evt);
            }
        });

        JM_lblstreet.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblstreet.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblstreet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lblstreet.setText("Street:");

        JM_tblmed.setForeground(new java.awt.Color(102, 0, 102));
        JM_tblmed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JM_tblmed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JM_tblmedMouseClicked(evt);
            }
        });
        JM_jScrollPane2.setViewportView(JM_tblmed);

        JM_btnadd.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnadd.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnadd.setText("Add");
        JM_btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnaddActionPerformed(evt);
            }
        });

        JM_btndel.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btndel.setForeground(new java.awt.Color(0, 153, 153));
        JM_btndel.setText("Delete");
        JM_btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btndelActionPerformed(evt);
            }
        });

        JM_btnmod.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnmod.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnmod.setText("Modify");
        JM_btnmod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnmodActionPerformed(evt);
            }
        });

        JM_lblprescription.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblprescription.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblprescription.setText("Prescription:");

        JM_btnupload.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnupload.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnupload.setText("Upload");
        JM_btnupload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnuploadActionPerformed(evt);
            }
        });

        JM_lblmedname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblmedname.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblmedname.setText("Medicine Name:");

        JM_lblquant.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblquant.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblquant.setText("Quantity:");

        JM_txtmedname.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtmedname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtmedname.setForeground(new java.awt.Color(102, 0, 102));

        JM_txtquant.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtquant.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtquant.setForeground(new java.awt.Color(102, 0, 102));

        JM_lblnoimg.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblnoimg.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblnoimg.setText("No image uploaded");

        JM_txtstreet.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtstreet.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtstreet.setForeground(new java.awt.Color(102, 0, 102));

        JM_lbladd.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbladd.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbladd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lbladd.setText("Area:");

        JM_txtadd.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtadd.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtadd.setForeground(new java.awt.Color(102, 0, 102));

        JM_lblcity.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblcity.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblcity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lblcity.setText("City:");

        JM_txtcity.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtcity.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtcity.setForeground(new java.awt.Color(102, 0, 102));

        JM_lblstate.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblstate.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblstate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lblstate.setText("State:");

        JM_txtstate.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtstate.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtstate.setForeground(new java.awt.Color(102, 0, 102));

        JM_lblpin.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblpin.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblpin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lblpin.setText("Pin:");

        JM_txtpin.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtpin.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtpin.setForeground(new java.awt.Color(102, 0, 102));

        JM_lbltitle.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        JM_lbltitle.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JM_lbltitle.setText("New Pharmacy Request");

        JM_btnupdate.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnupdate.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnupdate.setText("Update");
        JM_btnupdate.setEnabled(false);
        JM_btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnupdateActionPerformed(evt);
            }
        });

        JM_txtconno.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtconno.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtconno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtconnoActionPerformed(evt);
            }
        });

        JM_lblconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblconno.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblconno.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lblconno.setText("Contact Number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JM_btnback)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(JM_lblcity)
                                        .addComponent(JM_lblstate)
                                        .addComponent(JM_lblpin)
                                        .addComponent(JM_lblconno))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JM_txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JM_txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JM_txtpin, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JM_btnreqmed)
                                        .addComponent(JM_txtconno, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JM_lblstreet, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(JM_lbladd, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JM_txtstreet, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JM_txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JM_lblprescription)
                                .addGap(18, 18, 18)
                                .addComponent(JM_lblnoimg)
                                .addGap(18, 18, 18)
                                .addComponent(JM_btnupload, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JM_jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(135, 135, 135)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(JM_btnmod, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JM_lblmedname, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JM_txtmedname, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JM_lblquant)
                                            .addComponent(JM_txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JM_btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(133, 133, 133)
                                        .addComponent(JM_btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JM_btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(JM_lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(479, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(JM_lbltitle)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JM_btnmod, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JM_btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(JM_lblmedname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JM_txtmedname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(JM_lblquant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JM_txtquant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_btnadd)
                            .addComponent(JM_btnupdate)))
                    .addComponent(JM_jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_lblprescription)
                    .addComponent(JM_lblnoimg, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_btnupload))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_txtstreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lblstreet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lbladd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_lblcity)
                    .addComponent(JM_txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lblstate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_txtpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lblpin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_txtconno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lblconno))
                .addGap(20, 20, 20)
                .addComponent(JM_btnreqmed, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JM_btnback)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
 private boolean checkPin(String phoneNumber) {
        Pattern pat = Pattern.compile("^[0-9]{6}$");
        Matcher mat = pat.matcher(phoneNumber);
        return mat.matches();
    }
    private boolean checkPhoneNo(String phoneNumber) {
        Pattern pat = Pattern.compile("^[0-9]{10}$");
        Matcher mat = pat.matcher(phoneNumber);
        return mat.matches();
    }
    private void JM_btnreqmedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnreqmedActionPerformed

        HospitalPharmacyWorkReq req = new HospitalPharmacyWorkReq();
        List<Medicare> medList = new ArrayList<Medicare>(ua.getMedList());
        if(medList .isEmpty()){
            JOptionPane.showMessageDialog(null, "No medicines added! Please add a medicine to request.");
            return;
        }
        req.setMedList(medList );
        for(Medicare med:ua.getMedList()){
            ua.getMedicalHistory().add(med);
        }
        String street = JM_txtstreet.getText();
        String area = JM_txtadd.getText();
        String city = JM_txtcity.getText();
        String state = JM_txtstate.getText();
        String pinNo = JM_txtpin.getText();
        if(street == null || street.equals("") || area==null || area.equals("") || city==null || city.equals("") || pinNo==null || pinNo.equals("") || state==null || state.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Address Details");
            return;
        }
        String phNo = JM_txtconno.getText();
        if(phNo == null || phNo.equals("")){
            JOptionPane.showMessageDialog(null, "Contact Number cannot be empty");
            return;
        }
        if(!checkPhoneNo(phNo)){
            JOptionPane.showMessageDialog(null, "Please enter a valid Contact Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!checkPin(pinNo)){
            JOptionPane.showMessageDialog(null, "Please enter a valid Pin Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        req.setPrescription(prescription);
        req.setArea(area);
        req.setCity(city);
        req.setStreet(street);
        req.setState(state);
        req.setPinCode(pinNo);
        req.setSenderNo(phNo);

        String address = street+", "+area+", "+city+", "+state+"- "+pinNo;
        req.setAddress(address);
        req.setSenderAdd(address);

        req.setSender(ua);
        req.setStatus("Sent");
        req.setNgo(ent.getName());
        Organisation organisation = null;
        for(Enterprise e: net.getEntDir().getEntList())
        {
            if(e.getEntType().equals(e.getEntType().Hospital))
            {
                for (Organisation organization : e.getOrgDir().getOrgList())
                {
                    if (organization instanceof PharmacyOrg){
                        organisation = organization;
                        organisation .getWorkQueue().getWrList().add(req);
                    }
                }
            }
        }
        if (organisation !=null){
            ua.getWorkQueue().getWrList().add(req);
        }

        JOptionPane.showMessageDialog(null, "Medcines Request Sent Successfully");

        JM_txtadd.setText("");
        JM_txtcity.setText("");
        JM_txtpin.setText("");
        JM_txtstate.setText("");
        JM_txtstreet.setText("");
        JM_txtconno.setText("");

        DefaultTableModel mdl = (DefaultTableModel) JM_tblmed.getModel();
        mdl.setRowCount(0);

    }//GEN-LAST:event_JM_btnreqmedActionPerformed

    private void JM_btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnbackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PharmacyWorkAreaJPanel dwjp = (PharmacyWorkAreaJPanel) component;
        dwjp.populateMedReqTbl();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_JM_btnbackActionPerformed

    private void JM_tblmedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JM_tblmedMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_tblmedMouseClicked

    private void JM_btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnaddActionPerformed
        // TODO add your handling code here:
        String Nm = JM_txtmedname.getText();
        String quanttxt = JM_txtquant.getText();
        if(Nm ==null || Nm .equals("") || quanttxt.equals("") || quanttxt==null){
            JOptionPane.showMessageDialog(null,"Please enter medicine details to add one.");
            return;
        }
        try{
            Integer.parseInt(JM_txtquant.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a number for Quantity");
            return;
        }
        int quantity = Integer.parseInt(quanttxt);
        if(quantity<=0){
            JOptionPane.showMessageDialog(null, "Please type in a valid quantity");
            return;
        }
        if(!(ua.getMedList()==null)){
            for(Medicare med:ua.getMedList()){
                if(med.getMed_name().equalsIgnoreCase(Nm)){
                    JOptionPane.showMessageDialog(null,"This medicine is already entered in the cart. You can change the quantity of the medicine by selecting it and clicking the MODIFY button");
                    return;
                }
            }
        }
        LocalDate date = LocalDate.now();
        Medicare med = new Medicare(Nm,quantity,date);
        ua.getMedList().add(med);
        JM_txtmedname.setText("");
        JM_txtquant.setText("");
        populatemedtbl();
    }//GEN-LAST:event_JM_btnaddActionPerformed

    private void JM_btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btndelActionPerformed
        // TODO add your handling code here:
        int selectedRow = JM_tblmed.getSelectedRow();
        if(selectedRow>=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete this medicine?", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                Medicare med = (Medicare) JM_tblmed.getValueAt(selectedRow, 0);
                ua.getMedList().remove(med);
                populatemedtbl();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_JM_btndelActionPerformed

    private void JM_btnmodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnmodActionPerformed
        // TODO add your handling code here:
        int selectedRow = JM_tblmed.getSelectedRow();
        if(selectedRow>=0){
            Medicare med = (Medicare) JM_tblmed.getValueAt(selectedRow, 0);

            JM_txtmedname.setText(med.getMed_name());
            JM_txtquant.setText(String.valueOf(med.getMed_quantity()));
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        JM_txtmedname.setEditable(true);
        JM_txtquant.setEditable(true);
        JM_btnadd.setEnabled(false);
        JM_btndel.setEnabled(false);
        JM_btnmod.setEnabled(false);
        JM_btnupdate.setEnabled(true);
        JM_tblmed.setEnabled(false);
    }//GEN-LAST:event_JM_btnmodActionPerformed

    private ImageIcon imgResize(String imgPath){
        ImageIcon myImage = new ImageIcon(imgPath);
        Image img = myImage.getImage();
        Image newImage = img.getScaledInstance(45,45, Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }    
    
    private void JM_btnuploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnuploadActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);
        //if the user click on save in Jfilechooser
        if(res == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            prescription = path;
            JM_lblnoimg.setText("");
            JM_lblnoimg.setIcon(imgResize(path));
        }
        //if the user click on save in Jfilechooser

        else if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("No File Select");
        }
    }//GEN-LAST:event_JM_btnuploadActionPerformed

    private void JM_btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnupdateActionPerformed

        int selectedRow = JM_tblmed.getSelectedRow();
        Medicare med = (Medicare) JM_tblmed.getValueAt(selectedRow, 0);

        String Nm = JM_txtmedname.getText();
        String quanttxt = JM_txtquant.getText();
        if(Nm==null || Nm.equals("") || quanttxt.equals("") || quanttxt==null){
            JOptionPane.showMessageDialog(null,"Please enter medicine details to add one.");
            return;
        }
        try{
            Integer.parseInt(JM_txtquant.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please type in a number for Quantity");
            return;
        }
        int quantity = Integer.parseInt(quanttxt);

        LocalDate date = LocalDate.now();
        med.setMed_name(Nm);
        med.setMed_quantity(quantity);
        med.setOrdDt(date);
        JOptionPane.showMessageDialog(null, "Medicine details updated successfully");

        JM_txtmedname.setText("");
        JM_txtquant.setText("");
        JM_btnadd.setEnabled(true);
        JM_btndel.setEnabled(true);
        JM_btnmod.setEnabled(true);
        JM_btnupdate.setEnabled(false);
        JM_tblmed.setEnabled(true);
        populatemedtbl();
    }//GEN-LAST:event_JM_btnupdateActionPerformed

    private void JM_txtconnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtconnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtconnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JM_btnadd;
    private javax.swing.JButton JM_btnback;
    private javax.swing.JButton JM_btndel;
    private javax.swing.JButton JM_btnmod;
    private javax.swing.JButton JM_btnreqmed;
    private javax.swing.JButton JM_btnupdate;
    private javax.swing.JButton JM_btnupload;
    private javax.swing.JScrollPane JM_jScrollPane2;
    private javax.swing.JLabel JM_lbladd;
    private javax.swing.JLabel JM_lblcity;
    private javax.swing.JLabel JM_lblconno;
    private javax.swing.JLabel JM_lblmedname;
    private javax.swing.JLabel JM_lblnoimg;
    private javax.swing.JLabel JM_lblpin;
    private javax.swing.JLabel JM_lblprescription;
    private javax.swing.JLabel JM_lblquant;
    private javax.swing.JLabel JM_lblstate;
    private javax.swing.JLabel JM_lblstreet;
    private javax.swing.JLabel JM_lbltitle;
    private javax.swing.JTable JM_tblmed;
    private javax.swing.JTextField JM_txtadd;
    private javax.swing.JTextField JM_txtcity;
    private javax.swing.JTextField JM_txtconno;
    private javax.swing.JTextField JM_txtmedname;
    private javax.swing.JTextField JM_txtpin;
    private javax.swing.JTextField JM_txtquant;
    private javax.swing.JTextField JM_txtstate;
    private javax.swing.JTextField JM_txtstreet;
    // End of variables declaration//GEN-END:variables
}
