/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.HealthRole;

/**
 *
 * @author Mrinalini
 */
import UI.PharmacistRole.*;
import Model.Enterprise.Enterprise;
import Model.Medicare;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.HospitalDoctorWorkReq;
import Model.WorkQueue.HospitalPharmacyWorkReq;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import UI.HealthRole.MedJPanel;


public class ViewStatusInfoJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewStatusInfoJPanel
     */
     private JPanel userProcessContainer;
    private Enterprise enterprise;
    private HospitalPharmacyWorkReq request;
    private UserAccount userAccount;
    public ViewStatusInfoJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, HospitalPharmacyWorkReq request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.request = request;
        populatetblmed();
        JM_txtadd.setText(request.getAddress());
        JM_txtmsg.setText(request.getMessage());
        JM_btnsubmit.setVisible(false);
        JM_btnuploadpres.setVisible(false);
        
        if(request.getStatus().equals("Declined")){
            JM_btnuploadpres.setVisible(true);
            JM_btnsubmit.setVisible(true);
        }
        
        if(request.getPrescription()==null){
            JM_lblimg.setText("No Image Uploaded");
            JM_lblimg.setHorizontalAlignment(SwingConstants.CENTER);
        }
        else{
            JM_lblimg.setText("");
            JM_lblimg.setIcon(Imgresize(request.getPrescription()));
        }
    }
    private ImageIcon Imgresize(String ImagePath){
        ImageIcon img = new ImageIcon(ImagePath);
        Image img1 = img.getImage();
        Image newImage = img1.getScaledInstance(272,306, Image.SCALE_SMOOTH);
        ImageIcon image2 = new ImageIcon(newImage);
        return image2;
        
      }
        private void populatetblmed() {
       List<Medicare> medlist = request.getMedList();
        DefaultTableModel mdl = (DefaultTableModel) JM_tblmed.getModel();
        mdl.setRowCount(0);
        for(Medicare med:medlist){
            Object[] row =new Object[2];
            row[0] = med;
            row[1] = med.getMed_quantity();
            mdl.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JM_btnback = new javax.swing.JButton();
        JM_lbladd = new javax.swing.JLabel();
        JM_jScrollPane1 = new javax.swing.JScrollPane();
        JM_txtmsg = new javax.swing.JTextArea();
        JM_jScrollPane2 = new javax.swing.JScrollPane();
        JM_tblmed = new javax.swing.JTable();
        JM_lblprescription = new javax.swing.JLabel();
        JM_lblmsg = new javax.swing.JLabel();
        JM_jScrollPane3 = new javax.swing.JScrollPane();
        JM_txtadd = new javax.swing.JTextArea();
        JM_lblimg = new javax.swing.JLabel();
        JM_btnuploadpres = new javax.swing.JButton();
        JM_btnsubmit = new javax.swing.JButton();
        JM_lbltitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        JM_btnback.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnback.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnback.setText("<< Back");
        JM_btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnbackActionPerformed(evt);
            }
        });

        JM_lbladd.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbladd.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbladd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        JM_lbladd.setText("Address:");

        JM_txtmsg.setEditable(false);
        JM_txtmsg.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtmsg.setColumns(20);
        JM_txtmsg.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtmsg.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtmsg.setRows(5);
        JM_jScrollPane1.setViewportView(JM_txtmsg);

        JM_tblmed.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        JM_tblmed.setForeground(new java.awt.Color(102, 0, 102));
        JM_tblmed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JM_jScrollPane2.setViewportView(JM_tblmed);

        JM_lblprescription.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblprescription.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblprescription.setText("Prescription:");

        JM_lblmsg.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblmsg.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblmsg.setText("Message:");

        JM_txtadd.setEditable(false);
        JM_txtadd.setBackground(new java.awt.Color(204, 204, 204));
        JM_txtadd.setColumns(20);
        JM_txtadd.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtadd.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtadd.setRows(5);
        JM_jScrollPane3.setViewportView(JM_txtadd);

        JM_lblimg.setBackground(new java.awt.Color(204, 204, 204));
        JM_lblimg.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JM_btnuploadpres.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnuploadpres.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnuploadpres.setText("Upload Prescription");
        JM_btnuploadpres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnuploadpresActionPerformed(evt);
            }
        });

        JM_btnsubmit.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        JM_btnsubmit.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnsubmit.setText("SUBMIT");
        JM_btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnsubmitActionPerformed(evt);
            }
        });

        JM_lbltitle.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        JM_lbltitle.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JM_lbltitle.setText("View Request Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JM_lbltitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JM_btnback)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JM_btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JM_jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JM_lbladd)
                                .addGap(18, 18, 18)
                                .addComponent(JM_jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JM_lblprescription)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JM_btnuploadpres))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(JM_lblmsg)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(JM_jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JM_lblimg, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JM_btnback)
                .addGap(15, 15, 15)
                .addComponent(JM_lbltitle)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_lblprescription)
                    .addComponent(JM_btnuploadpres))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JM_lblimg, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JM_lbladd)
                    .addComponent(JM_lblmsg)
                    .addComponent(JM_jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(JM_jScrollPane3))
                .addGap(28, 28, 28)
                .addComponent(JM_btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JM_btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnbackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PharmacyWorkAreaJPanel panel = (PharmacyWorkAreaJPanel) component;
        panel.populateMedReqTbl();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_JM_btnbackActionPerformed

    private void JM_btnuploadpresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnuploadpresActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int res = file.showSaveDialog(null);
        //if the user click on save in Jfilechooser
        if(res == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            request.setPrescription(path);
            JM_lblimg.setText("");
            JM_lblimg.setIcon(Imgresize(path));
        }
        //if the user click on save in Jfilechooser

        else if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("No File Select");
        }
    }//GEN-LAST:event_JM_btnuploadpresActionPerformed

    private void JM_btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnsubmitActionPerformed
        // TODO add your handling code here:
        if(request.getPrescription()==null || request.getPrescription().equals("")){
            JOptionPane.showConfirmDialog(null, "Upload Prescription");
            return;
        }
        JOptionPane.showMessageDialog(null, "Submitted");
        request.setStatus("Updated");

    }//GEN-LAST:event_JM_btnsubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JM_btnback;
    private javax.swing.JButton JM_btnsubmit;
    private javax.swing.JButton JM_btnuploadpres;
    private javax.swing.JScrollPane JM_jScrollPane1;
    private javax.swing.JScrollPane JM_jScrollPane2;
    private javax.swing.JScrollPane JM_jScrollPane3;
    private javax.swing.JLabel JM_lbladd;
    private javax.swing.JLabel JM_lblimg;
    private javax.swing.JLabel JM_lblmsg;
    private javax.swing.JLabel JM_lblprescription;
    private javax.swing.JLabel JM_lbltitle;
    private javax.swing.JTable JM_tblmed;
    private javax.swing.JTextArea JM_txtadd;
    private javax.swing.JTextArea JM_txtmsg;
    // End of variables declaration//GEN-END:variables
}
