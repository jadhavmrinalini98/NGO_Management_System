/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.VolunteerRole;

/**
 *
 * @author krishna
 */
import Business.Employee.Volunteer;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import UI.TutorRole.ViewReqDetailPanel;
public class UpdateVolJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateVolJPanel
     */
    private JPanel userProcessCont;
    private UserAccount userAcc;
    private Volunteer vol;
    public UpdateVolJPanel(JPanel userProcessCont, UserAccount userAcc) {
        initComponents();
        this.userProcessCont = userProcessCont;
        this.userAcc = userAcc;
        initComponents();
        populateUDetails();
    }
    public void populateUDetails(){
        
            JM_txtname.setText(userAcc.getEmp().getName());
            JM_cbgender.setSelectedItem(userAcc.getEmp().getSex());
            LocalDate birthdate = userAcc.getEmp().getDob();
            Date dt = Date.from(birthdate.atStartOfDay(ZoneId.systemDefault()).toInstant());
            JM_DOBDate.setDate(dt);
            
            JM_txtemailid.setText(userAcc.getEmp().getEmail());
            JM_txtconno.setText(userAcc.getEmp().getPhNo());
            
            
            txtareaddress.setText(userAcc.getVolunteer().getAddress());
            JM_txtpincode.setText(userAcc.getVolunteer().getPincode());
            txtareaskills.setText(userAcc.getVolunteer().getSkills());
            JM_cbeng.setSelectedItem(userAcc.getVolunteer().getEngProficent());
            
            languagepopulate();
            populateEdu();
           
            
            if(userAcc.getVolunteer().getExpertise().contains("MS Word")){
                JM_checkboxword.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("MS Excel")){
                JM_checkboxexcel.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("PowerPoint")){
                JM_checkboxppt.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("Web Browsing")){
                JM_checkboxweb.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("Email Checking")){
                JM_checkboxemail.setSelected(true);
            }
            
            
            
                     
         
    }
    private void languagepopulate(){
        
        txtarealang.setText("");
        for(String lang: userAcc.getVolunteer().getLanguages()){
                 txtarealang.append(lang + "\n");
            }
    }
    private void populateEdu(){
        
        txtareaedu.setText("");
        int cnt = 1;
        for(Map.Entry<String,String> entry : userAcc.getVolunteer().getEduList().entrySet()){
            txtareaedu.append(cnt + ".  " + entry.getKey() + " " + entry.getValue() + "\n");
            cnt++;
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JM_btnback = new javax.swing.JButton();
        JM_txtname = new javax.swing.JTextField();
        JM_lblname = new javax.swing.JLabel();
        JM_lblsex = new javax.swing.JLabel();
        JM_lbldob = new javax.swing.JLabel();
        JM_lblnationality = new javax.swing.JLabel();
        JM_txtnationality = new javax.swing.JTextField();
        JM_lblemailid = new javax.swing.JLabel();
        JM_txtconno = new javax.swing.JTextField();
        JM_lblconno = new javax.swing.JLabel();
        JM_txtemailid = new javax.swing.JTextField();
        JM_lbltitle = new javax.swing.JLabel();
        JM_cbgender = new javax.swing.JComboBox();
        JM_btnupdt = new javax.swing.JButton();
        JM_btnsave = new javax.swing.JButton();
        JM_DOBDate = new com.toedter.calendar.JDateChooser();
        JM_lblperinfo = new javax.swing.JLabel();
        JM_lblcontinfo = new javax.swing.JLabel();
        JM_lbladdress = new javax.swing.JLabel();
        JM_jScrollPane1 = new javax.swing.JScrollPane();
        txtareaddress = new javax.swing.JTextArea();
        JM_lbledu = new javax.swing.JLabel();
        JM_cityTextJField = new javax.swing.JTextField();
        JM_lblcity = new javax.swing.JLabel();
        JM_lblpincode = new javax.swing.JLabel();
        JM_txtpincode = new javax.swing.JTextField();
        JM_cbedu = new javax.swing.JComboBox();
        JM_lbledu1 = new javax.swing.JLabel();
        JM_lblschool = new javax.swing.JLabel();
        JM_lbldegree = new javax.swing.JLabel();
        JM_txtschool = new javax.swing.JTextField();
        JM_txtdegree = new javax.swing.JTextField();
        JM_btnadd = new javax.swing.JButton();
        JM_lbllang = new javax.swing.JLabel();
        JM_jScrollPane2 = new javax.swing.JScrollPane();
        txtareaedu = new javax.swing.JTextArea();
        JM_lbleng = new javax.swing.JLabel();
        JM_cbeng = new javax.swing.JComboBox();
        JM_lblotherlang = new javax.swing.JLabel();
        JM_jScrollPane3 = new javax.swing.JScrollPane();
        txtarealang = new javax.swing.JTextArea();
        JM_txtlang = new javax.swing.JTextField();
        JM_btnlangadd = new javax.swing.JButton();
        JM_checkboxword = new javax.swing.JCheckBox();
        JM_checkboxexcel = new javax.swing.JCheckBox();
        JM_checkboxppt = new javax.swing.JCheckBox();
        JM_checkboxemail = new javax.swing.JCheckBox();
        JM_checkboxweb = new javax.swing.JCheckBox();
        JM_lblwrknw = new javax.swing.JLabel();
        JM_jScrollPane4 = new javax.swing.JScrollPane();
        txtareaskills = new javax.swing.JTextArea();
        JM_lblskill = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        JM_btnback.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnback.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnback.setText("<< Back");
        JM_btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnbackActionPerformed(evt);
            }
        });

        JM_txtname.setEditable(false);
        JM_txtname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtname.setForeground(new java.awt.Color(102, 0, 102));

        JM_lblname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblname.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblname.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lblname.setText("Name: ");

        JM_lblsex.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblsex.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblsex.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lblsex.setText("Sex: ");

        JM_lbldob.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbldob.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbldob.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lbldob.setText("D.O.B:");

        JM_lblnationality.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblnationality.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblnationality.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lblnationality.setText("Nationality:");

        JM_txtnationality.setEditable(false);
        JM_txtnationality.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtnationality.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtnationality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtnationalityActionPerformed(evt);
            }
        });

        JM_lblemailid.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblemailid.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblemailid.setText("Email Id:");

        JM_txtconno.setEditable(false);
        JM_txtconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtconno.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtconno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtconnoActionPerformed(evt);
            }
        });

        JM_lblconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblconno.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblconno.setText("Contact Number:");

        JM_txtemailid.setEditable(false);
        JM_txtemailid.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtemailid.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtemailid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtemailidActionPerformed(evt);
            }
        });

        JM_lbltitle.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        JM_lbltitle.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JM_lbltitle.setText("Update Volunteer Details");

        JM_cbgender.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_cbgender.setForeground(new java.awt.Color(102, 0, 102));
        JM_cbgender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female", "Other" }));
        JM_cbgender.setEnabled(false);
        JM_cbgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_cbgenderActionPerformed(evt);
            }
        });

        JM_btnupdt.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnupdt.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnupdt.setText("UPDATE");
        JM_btnupdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnupdtActionPerformed(evt);
            }
        });

        JM_btnsave.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnsave.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnsave.setText("SAVE");
        JM_btnsave.setEnabled(false);
        JM_btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnsaveActionPerformed(evt);
            }
        });

        JM_DOBDate.setForeground(new java.awt.Color(102, 0, 102));
        JM_DOBDate.setEnabled(false);
        JM_DOBDate.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N

        JM_lblperinfo.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        JM_lblperinfo.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblperinfo.setText("Personal Information");

        JM_lblcontinfo.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        JM_lblcontinfo.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblcontinfo.setText("Contact Information");

        JM_lbladdress.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbladdress.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbladdress.setText("Address:");

        JM_jScrollPane1.setForeground(new java.awt.Color(102, 0, 102));

        txtareaddress.setEditable(false);
        txtareaddress.setColumns(20);
        txtareaddress.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtareaddress.setRows(5);
        JM_jScrollPane1.setViewportView(txtareaddress);

        JM_lbledu.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        JM_lbledu.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbledu.setText("Education");

        JM_cityTextJField.setEditable(false);
        JM_cityTextJField.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_cityTextJField.setForeground(new java.awt.Color(102, 0, 102));
        JM_cityTextJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_cityTextJFieldActionPerformed(evt);
            }
        });

        JM_lblcity.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblcity.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblcity.setText("City:");

        JM_lblpincode.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblpincode.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblpincode.setText("Pincode:");

        JM_txtpincode.setEditable(false);
        JM_txtpincode.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtpincode.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtpincode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtpincodeActionPerformed(evt);
            }
        });

        JM_cbedu.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_cbedu.setForeground(new java.awt.Color(102, 0, 102));
        JM_cbedu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10th", "12th", "Bachelors", "Masters" }));
        JM_cbedu.setEnabled(false);
        JM_cbedu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_cbeduActionPerformed(evt);
            }
        });

        JM_lbledu1.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbledu1.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbledu1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lbledu1.setText("Education: ");

        JM_lblschool.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblschool.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblschool.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lblschool.setText("School/University: ");

        JM_lbldegree.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbldegree.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbldegree.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lbldegree.setText("Degree:");

        JM_txtschool.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtschool.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtschool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtschoolActionPerformed(evt);
            }
        });

        JM_txtdegree.setEditable(false);
        JM_txtdegree.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtdegree.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtdegree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtdegreeActionPerformed(evt);
            }
        });

        JM_btnadd.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnadd.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnadd.setText("ADD");
        JM_btnadd.setEnabled(false);
        JM_btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnaddActionPerformed(evt);
            }
        });

        JM_lbllang.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        JM_lbllang.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbllang.setText("Language Proficency & Skills");

        JM_jScrollPane2.setForeground(new java.awt.Color(102, 0, 102));

        txtareaedu.setEditable(false);
        txtareaedu.setColumns(20);
        txtareaedu.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtareaedu.setRows(5);
        JM_jScrollPane2.setViewportView(txtareaedu);

        JM_lbleng.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lbleng.setForeground(new java.awt.Color(255, 255, 255));
        JM_lbleng.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JM_lbleng.setText("English: ");

        JM_cbeng.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_cbeng.setForeground(new java.awt.Color(102, 0, 102));
        JM_cbeng.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Excelent", "Good", "Working" }));
        JM_cbeng.setEnabled(false);
        JM_cbeng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_cbengActionPerformed(evt);
            }
        });

        JM_lblotherlang.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblotherlang.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblotherlang.setText("Other Language:");

        JM_jScrollPane3.setForeground(new java.awt.Color(102, 0, 102));

        txtarealang.setEditable(false);
        txtarealang.setColumns(20);
        txtarealang.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtarealang.setRows(5);
        JM_jScrollPane3.setViewportView(txtarealang);

        JM_txtlang.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtlang.setForeground(new java.awt.Color(102, 0, 102));
        JM_txtlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_txtlangActionPerformed(evt);
            }
        });

        JM_btnlangadd.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_btnlangadd.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnlangadd.setText("ADD");
        JM_btnlangadd.setEnabled(false);
        JM_btnlangadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnlangaddActionPerformed(evt);
            }
        });

        JM_checkboxword.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_checkboxword.setText("MS Word");
        JM_checkboxword.setEnabled(false);
        JM_checkboxword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_checkboxwordActionPerformed(evt);
            }
        });

        JM_checkboxexcel.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_checkboxexcel.setText("MS Excel");
        JM_checkboxexcel.setEnabled(false);

        JM_checkboxppt.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        JM_checkboxppt.setText("PowerPoint");
        JM_checkboxppt.setEnabled(false);
        JM_checkboxppt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_checkboxpptActionPerformed(evt);
            }
        });

        JM_checkboxemail.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_checkboxemail.setText("Email Checking");
        JM_checkboxemail.setEnabled(false);

        JM_checkboxweb.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_checkboxweb.setText("Web Browsing");
        JM_checkboxweb.setEnabled(false);

        JM_lblwrknw.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblwrknw.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblwrknw.setText("Work Knowledge of:");

        JM_jScrollPane4.setForeground(new java.awt.Color(102, 0, 102));

        txtareaskills.setEditable(false);
        txtareaskills.setColumns(20);
        txtareaskills.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtareaskills.setRows(5);
        JM_jScrollPane4.setViewportView(txtareaskills);

        JM_lblskill.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_lblskill.setForeground(new java.awt.Color(255, 255, 255));
        JM_lblskill.setText("Skills:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JM_lbltitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(JM_lblperinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JM_lblcontinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JM_lblconno)
                                        .addComponent(JM_lblemailid)
                                        .addComponent(JM_lbladdress)
                                        .addComponent(JM_lblpincode))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JM_jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(JM_cbgender, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(JM_txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(JM_DOBDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JM_txtnationality, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(JM_txtconno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                            .addComponent(JM_txtemailid, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(JM_txtpincode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                            .addComponent(JM_cityTextJField, javax.swing.GroupLayout.Alignment.LEADING))))
                                .addComponent(JM_lblnationality)
                                .addComponent(JM_lblname)
                                .addComponent(JM_lbldob)
                                .addComponent(JM_lblsex))
                            .addComponent(JM_lblcity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JM_lbleng)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JM_btnupdt)
                                .addGap(18, 18, 18)
                                .addComponent(JM_btnsave))
                            .addComponent(JM_lbledu, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JM_jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JM_lbledu1)
                                    .addComponent(JM_lblschool)
                                    .addComponent(JM_lbldegree))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JM_txtdegree, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JM_txtschool, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JM_cbedu, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(JM_lbllang, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JM_lblwrknw)
                                    .addComponent(JM_lblskill)
                                    .addComponent(JM_lblotherlang))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JM_jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(121, 121, 121)
                                                .addComponent(JM_btnadd))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(JM_txtlang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addComponent(JM_btnlangadd))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(JM_checkboxppt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(JM_checkboxword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(JM_checkboxexcel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(JM_checkboxemail)
                                            .addComponent(JM_checkboxweb, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(JM_jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JM_cbeng, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JM_btnback)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(JM_btnback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JM_lbltitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_lblperinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lbledu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_lblname)
                            .addComponent(JM_txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_lblsex)
                            .addComponent(JM_cbgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JM_DOBDate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(JM_lbldob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_txtnationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JM_lblnationality)))
                    .addComponent(JM_jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_lbledu1)
                            .addComponent(JM_cbedu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_lblschool)
                            .addComponent(JM_txtschool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_lbldegree)
                            .addComponent(JM_txtdegree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JM_btnadd)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JM_lbllang, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(JM_lblcontinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_lblemailid)
                    .addComponent(JM_txtemailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_lbleng)
                    .addComponent(JM_cbeng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_lblconno)
                            .addComponent(JM_txtconno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JM_lbladdress)
                            .addComponent(JM_jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JM_lblcity)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JM_cityTextJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JM_txtpincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JM_lblpincode)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JM_lblotherlang)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(JM_txtlang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(JM_btnlangadd))
                                .addComponent(JM_jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_checkboxword)
                            .addComponent(JM_checkboxemail)
                            .addComponent(JM_lblwrknw))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JM_checkboxexcel)
                            .addComponent(JM_checkboxweb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JM_checkboxppt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JM_jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JM_lblskill))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_btnupdt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(210, 210, 210))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JM_btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnbackActionPerformed
        // TODO add your handling code here:
        userProcessCont.remove(this);
        Component[] componentArray = userProcessCont.getComponents();
        Component cmp = componentArray[componentArray.length - 1];
        VolunteerWorkAreaJPanel dwjp = (VolunteerWorkAreaJPanel) cmp;
        dwjp.autoPopUserDetails();
        CardLayout lyt = (CardLayout)userProcessCont.getLayout();
        lyt.previous(userProcessCont);
    }//GEN-LAST:event_JM_btnbackActionPerformed
private boolean phonePatternCheck(String phoneNumber) {
        Pattern pat = Pattern.compile("^[0-9]{10}$");
        Matcher mat = pat.matcher(phoneNumber);
        return mat.matches();
    }
    
    private boolean pincodePatternCheck(String pincode) {
        Pattern pat = Pattern.compile("^[0-9]{5}$");
        Matcher mat = pat.matcher(pincode);
        return mat.matches();
    }
    private void JM_txtnationalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtnationalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtnationalityActionPerformed

    private void JM_txtconnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtconnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtconnoActionPerformed

    private void JM_txtemailidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtemailidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtemailidActionPerformed

    private void JM_cbgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_cbgenderActionPerformed

    }//GEN-LAST:event_JM_cbgenderActionPerformed

    private void JM_btnupdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnupdtActionPerformed

        JM_txtname.setEditable(true);
        JM_txtnationality.setEditable(true);
        JM_txtemailid.setEditable(true);
        JM_txtconno.setEditable(true);
        JM_DOBDate.setEnabled(true);
        JM_cbgender.setEnabled(true);
        JM_cbeng.setEnabled(true);
        JM_cbedu.setEnabled(true);
        txtareaddress.setEditable(true);
        txtareaedu.setEditable(true);
        txtareaskills.setEditable(true);
        JM_txtpincode.setEditable(true);
        JM_cityTextJField.setEditable(true);
        JM_btnlangadd.setEnabled(true);
        JM_btnadd.setEnabled(true);
        JM_btnupdt.setEnabled(false);
        JM_btnsave.setEnabled(true);
        JM_checkboxword.setEnabled(true);
        JM_checkboxexcel.setEnabled(true);
        JM_checkboxppt.setEnabled(true);
        JM_checkboxweb.setEnabled(true);
        JM_checkboxemail.setEnabled(true);
    }//GEN-LAST:event_JM_btnupdtActionPerformed

    private void JM_btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnsaveActionPerformed

        String Nm = JM_txtname.getText();
        if(Nm == null || Nm.equals("")){
            JOptionPane.showMessageDialog(null, "Name mandatory");
            return;
        }
        userAcc.getEmp().setName(Nm);

        String sex = (String) JM_cbgender.getSelectedItem();
        if(sex == null || sex.equals("")){
            JOptionPane.showMessageDialog(null, "Gender type mandatory");
            return;
        }
        userAcc.getEmp().setSex(sex);

        Date birthdate =  (Date) JM_DOBDate.getDate();
        if(birthdate == null){
            JOptionPane.showMessageDialog(null, "Date of Birth mandatory");
            return;
        }
        if(birthdate.after(new Date())){
            JOptionPane.showMessageDialog(null, "select a valid Date");
            return;
        }
        LocalDate  db= birthdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        userAcc.getEmp().setDob(db);

        String Nat = JM_txtnationality.getText();
        if(Nat == null || Nat.equals("")){
            JOptionPane.showMessageDialog(null, "Nationality mandatory");
            return;
        }

        String EID = JM_txtemailid.getText();
        if(EID  == null ||EID .equals("")){
            JOptionPane.showMessageDialog(null, "Email ID mandatory");
            return;
        }
        userAcc.getEmp().setEmail(EID);

        String conNo = JM_txtconno.getText();
        if(conNo == null || conNo.equals("")){
            JOptionPane.showMessageDialog(null, "Contact Number mandatory");
            return;
        }
        if(!phonePatternCheck(conNo)){
            JOptionPane.showMessageDialog(null, "Enter a valid Phone Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        userAcc.getEmp().setPhNo(conNo);

        String add = txtareaddress.getText();
        if(add == null || add.equals("")){
            JOptionPane.showMessageDialog(null, "Address mandatory");
            return;
        }
        userAcc.getVolunteer().setAddress(add);

        String pcode = JM_txtpincode.getText();
        if(pcode == null || pcode.equals("")){
            JOptionPane.showMessageDialog(null, "Pincode mandatory");
            return;
        }
        if(!pincodePatternCheck(pcode)){
            JOptionPane.showMessageDialog(null, "Please enter a valid Pincode", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        userAcc.getVolunteer().setPincode(pcode);

        String cty = JM_cityTextJField.getText();
        if(cty == null || cty.equals("")){
            JOptionPane.showMessageDialog(null, "City mandatory");
            return;
        }

        String eng = (String) JM_cbeng.getSelectedItem();
        if(eng == null || eng.equals("")){
            JOptionPane.showMessageDialog(null, "English option mandatory");
            return;
        }
        userAcc.getVolunteer().setEngProficent(eng);

        String sk = txtareaskills.getText();
        if(sk == null || sk.equals("")){
            JOptionPane.showMessageDialog(null, "Skills mandatory");
            return;
        }
        userAcc.getVolunteer().setSkills(sk);

        if(JM_checkboxword.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("MS Word");
        }
        if(JM_checkboxexcel.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("MS Excel");
        }
        if(JM_checkboxppt.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("PowerPoint");
        }
        if(JM_checkboxemail.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("Email Checking");
        }
        if(JM_checkboxweb.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("Web Browsing");
        }

        JM_txtname.setEditable(false);
        JM_txtnationality.setEditable(false);
        JM_txtemailid.setEditable(false);
        JM_txtconno.setEditable(false);
        JM_DOBDate.setEnabled(false);
        JM_cbgender.setEnabled(false);
        JM_cbeng.setEnabled(false);
        JM_cbedu.setEnabled(false);
        txtareaddress.setEditable(false);
        txtareaedu.setEditable(false);
        txtareaskills.setEditable(false);
        JM_txtpincode.setEditable(false);
        JM_cityTextJField.setEditable(false);
        JM_btnlangadd.setEnabled(false);
        JM_btnadd.setEnabled(false);
        JM_btnupdt.setEnabled(true);
        JM_btnsave.setEnabled(false);
        JM_checkboxword.setEnabled(false);
        JM_checkboxexcel.setEnabled(false);
        JM_checkboxppt.setEnabled(false);
        JM_checkboxweb.setEnabled(false);
        JM_checkboxemail.setEnabled(false);

    }//GEN-LAST:event_JM_btnsaveActionPerformed

    private void JM_cityTextJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_cityTextJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_cityTextJFieldActionPerformed

    private void JM_txtpincodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtpincodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtpincodeActionPerformed

    private void JM_cbeduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_cbeduActionPerformed
        // TODO add your handling code here:
        if(JM_cbedu.getSelectedItem().equals("Bachelors") || JM_cbedu.getSelectedItem().equals("Masters")){
            JM_txtdegree.setEditable(true);
        }
    }//GEN-LAST:event_JM_cbeduActionPerformed

    private void JM_txtschoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtschoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtschoolActionPerformed

    private void JM_txtdegreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtdegreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtdegreeActionPerformed

    private void JM_btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnaddActionPerformed

        String edu = (String) JM_cbedu.getSelectedItem();
        if(edu == null || edu.equals("")){
            JOptionPane.showMessageDialog(null, "Education type mandatory");
            return;
        }

        String sch = JM_txtschool.getText();
        if(sch == null || sch.equals("")){
            JOptionPane.showMessageDialog(null, "School/University mandatory");
            return;
        }

        if(edu.equals("Bachelors") || edu.equals("Masters")) {

            String deg = JM_txtdegree.getText();
            if(deg == null || deg.equals("")){
                JOptionPane.showMessageDialog(null, "Degree mandatory");
                return;
            }

            String sd = sch + " [" + deg + "] ";

            userAcc.getVolunteer().getEduList().put(edu, sd);
            populateEdu();

        }

        else if (edu.equals("10th") || edu.equals("12th")){

            userAcc.getVolunteer().getEduList().put(edu, sch);
            populateEdu();

        }

        JM_txtschool.setText("");
        JM_txtdegree.setText("");

    }//GEN-LAST:event_JM_btnaddActionPerformed

    private void JM_cbengActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_cbengActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_cbengActionPerformed

    private void JM_txtlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_txtlangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_txtlangActionPerformed

    private void JM_btnlangaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnlangaddActionPerformed
        userAcc.getVolunteer().getLanguages().add(JM_txtlang.getText());
        languagepopulate();
        JM_txtlang.setText("");
    }//GEN-LAST:event_JM_btnlangaddActionPerformed

    private void JM_checkboxwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_checkboxwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_checkboxwordActionPerformed

    private void JM_checkboxpptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_checkboxpptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JM_checkboxpptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JM_DOBDate;
    private javax.swing.JButton JM_btnadd;
    private javax.swing.JButton JM_btnback;
    private javax.swing.JButton JM_btnlangadd;
    private javax.swing.JButton JM_btnsave;
    private javax.swing.JButton JM_btnupdt;
    private javax.swing.JComboBox JM_cbedu;
    private javax.swing.JComboBox JM_cbeng;
    private javax.swing.JComboBox JM_cbgender;
    private javax.swing.JCheckBox JM_checkboxemail;
    private javax.swing.JCheckBox JM_checkboxexcel;
    private javax.swing.JCheckBox JM_checkboxppt;
    private javax.swing.JCheckBox JM_checkboxweb;
    private javax.swing.JCheckBox JM_checkboxword;
    private javax.swing.JTextField JM_cityTextJField;
    private javax.swing.JScrollPane JM_jScrollPane1;
    private javax.swing.JScrollPane JM_jScrollPane2;
    private javax.swing.JScrollPane JM_jScrollPane3;
    private javax.swing.JScrollPane JM_jScrollPane4;
    private javax.swing.JLabel JM_lbladdress;
    private javax.swing.JLabel JM_lblcity;
    private javax.swing.JLabel JM_lblconno;
    private javax.swing.JLabel JM_lblcontinfo;
    private javax.swing.JLabel JM_lbldegree;
    private javax.swing.JLabel JM_lbldob;
    private javax.swing.JLabel JM_lbledu;
    private javax.swing.JLabel JM_lbledu1;
    private javax.swing.JLabel JM_lblemailid;
    private javax.swing.JLabel JM_lbleng;
    private javax.swing.JLabel JM_lbllang;
    private javax.swing.JLabel JM_lblname;
    private javax.swing.JLabel JM_lblnationality;
    private javax.swing.JLabel JM_lblotherlang;
    private javax.swing.JLabel JM_lblperinfo;
    private javax.swing.JLabel JM_lblpincode;
    private javax.swing.JLabel JM_lblschool;
    private javax.swing.JLabel JM_lblsex;
    private javax.swing.JLabel JM_lblskill;
    private javax.swing.JLabel JM_lbltitle;
    private javax.swing.JLabel JM_lblwrknw;
    private javax.swing.JTextField JM_txtconno;
    private javax.swing.JTextField JM_txtdegree;
    private javax.swing.JTextField JM_txtemailid;
    private javax.swing.JTextField JM_txtlang;
    private javax.swing.JTextField JM_txtname;
    private javax.swing.JTextField JM_txtnationality;
    private javax.swing.JTextField JM_txtpincode;
    private javax.swing.JTextField JM_txtschool;
    private javax.swing.JTextArea txtareaddress;
    private javax.swing.JTextArea txtareaedu;
    private javax.swing.JTextArea txtarealang;
    private javax.swing.JTextArea txtareaskills;
    // End of variables declaration//GEN-END:variables
}
