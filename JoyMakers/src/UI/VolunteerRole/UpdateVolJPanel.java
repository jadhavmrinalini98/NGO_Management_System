/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.VolunteerRole;

/**
 *
 * @author krishna
 */
import Business.Employee.Volunteer;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import UI.TutorRole.ViewReqDetailPanel;
public class UpdateVolJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateVolJPanel
     */
    private JPanel userProcessCont;
    private UserAccount userAcc;
    private Volunteer vol;
    public UpdateVolJPanel(JPanel userProcessCont, UserAccount userAcc) {
        initComponents();
        this.userProcessCont = userProcessCont;
        this.userAcc = userAcc;
        initComponents();
        populateUDetails();
    }
    public void populateUDetails(){
        
            txtname.setText(userAcc.getEmp().getName());
            cbgender.setSelectedItem(userAcc.getEmp().getSex());
            LocalDate birthdate = userAcc.getEmp().getDob();
            Date dt = Date.from(birthdate.atStartOfDay(ZoneId.systemDefault()).toInstant());
            DOBDate.setDate(dt);
            
            txtemailid.setText(userAcc.getEmp().getEmail());
            txtconno.setText(userAcc.getEmp().getPhNo());
            
            
            txtareaddress.setText(userAcc.getVolunteer().getAddress());
            txtpincode.setText(userAcc.getVolunteer().getPincode());
            txtareaskills.setText(userAcc.getVolunteer().getSkills());
            cbeng.setSelectedItem(userAcc.getVolunteer().getEngProficent());
            
            languagepopulate();
            populateEdu();
           
            
            if(userAcc.getVolunteer().getExpertise().contains("MS Word")){
                checkboxword.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("MS Excel")){
                checkboxexcel.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("PowerPoint")){
                checkboxppt.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("Web Browsing")){
                checkboxweb.setSelected(true);
            }
            if(userAcc.getVolunteer().getExpertise().contains("Email Checking")){
                checkboxemail.setSelected(true);
            }
            
            
            
                     
         
    }
    private void languagepopulate(){
        
        txtarealang.setText("");
        for(String lang: userAcc.getVolunteer().getLanguages()){
                 txtarealang.append(lang + "\n");
            }
    }
    private void populateEdu(){
        
        txtareaedu.setText("");
        int cnt = 1;
        for(Map.Entry<String,String> entry : userAcc.getVolunteer().getEduList().entrySet()){
            txtareaedu.append(cnt + ".  " + entry.getKey() + " " + entry.getValue() + "\n");
            cnt++;
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnback = new javax.swing.JButton();
        txtname = new javax.swing.JTextField();
        lblname = new javax.swing.JLabel();
        lblsex = new javax.swing.JLabel();
        lbldob = new javax.swing.JLabel();
        lblnationality = new javax.swing.JLabel();
        txtnationality = new javax.swing.JTextField();
        lblemailid = new javax.swing.JLabel();
        txtconno = new javax.swing.JTextField();
        lblconno = new javax.swing.JLabel();
        txtemailid = new javax.swing.JTextField();
        lbltitle = new javax.swing.JLabel();
        cbgender = new javax.swing.JComboBox();
        btnupdt = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        DOBDate = new com.toedter.calendar.JDateChooser();
        lblperinfo = new javax.swing.JLabel();
        lblcontinfo = new javax.swing.JLabel();
        lbladdress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtareaddress = new javax.swing.JTextArea();
        lbledu = new javax.swing.JLabel();
        cityTextJField = new javax.swing.JTextField();
        lblcity = new javax.swing.JLabel();
        lblpincode = new javax.swing.JLabel();
        txtpincode = new javax.swing.JTextField();
        cbedu = new javax.swing.JComboBox();
        lbledu1 = new javax.swing.JLabel();
        lblschool = new javax.swing.JLabel();
        lbldegree = new javax.swing.JLabel();
        txtschool = new javax.swing.JTextField();
        txtdegree = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        lbllang = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtareaedu = new javax.swing.JTextArea();
        lbleng = new javax.swing.JLabel();
        cbeng = new javax.swing.JComboBox();
        lblotherlang = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtarealang = new javax.swing.JTextArea();
        txtlang = new javax.swing.JTextField();
        btnlangadd = new javax.swing.JButton();
        checkboxword = new javax.swing.JCheckBox();
        checkboxexcel = new javax.swing.JCheckBox();
        checkboxppt = new javax.swing.JCheckBox();
        checkboxemail = new javax.swing.JCheckBox();
        checkboxweb = new javax.swing.JCheckBox();
        lblwrknw = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtareaskills = new javax.swing.JTextArea();
        lblskill = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnback.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnback.setForeground(new java.awt.Color(102, 0, 102));
        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        txtname.setEditable(false);
        txtname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtname.setForeground(new java.awt.Color(102, 0, 102));

        lblname.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblname.setForeground(new java.awt.Color(102, 0, 102));
        lblname.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblname.setText("Name: ");

        lblsex.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblsex.setForeground(new java.awt.Color(102, 0, 102));
        lblsex.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblsex.setText("Sex: ");

        lbldob.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lbldob.setForeground(new java.awt.Color(102, 0, 102));
        lbldob.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbldob.setText("D.O.B:");

        lblnationality.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblnationality.setForeground(new java.awt.Color(102, 0, 102));
        lblnationality.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblnationality.setText("Nationality:");

        txtnationality.setEditable(false);
        txtnationality.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtnationality.setForeground(new java.awt.Color(102, 0, 102));
        txtnationality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnationalityActionPerformed(evt);
            }
        });

        lblemailid.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblemailid.setForeground(new java.awt.Color(102, 0, 102));
        lblemailid.setText("Email Id:");

        txtconno.setEditable(false);
        txtconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtconno.setForeground(new java.awt.Color(102, 0, 102));
        txtconno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtconnoActionPerformed(evt);
            }
        });

        lblconno.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblconno.setForeground(new java.awt.Color(102, 0, 102));
        lblconno.setText("Contact Number:");

        txtemailid.setEditable(false);
        txtemailid.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtemailid.setForeground(new java.awt.Color(102, 0, 102));
        txtemailid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailidActionPerformed(evt);
            }
        });

        lbltitle.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        lbltitle.setForeground(new java.awt.Color(102, 0, 102));
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("Update Volunteer Details");

        cbgender.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        cbgender.setForeground(new java.awt.Color(102, 0, 102));
        cbgender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female", "Other" }));
        cbgender.setEnabled(false);
        cbgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbgenderActionPerformed(evt);
            }
        });

        btnupdt.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnupdt.setForeground(new java.awt.Color(102, 0, 102));
        btnupdt.setText("UPDATE");
        btnupdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdtActionPerformed(evt);
            }
        });

        btnsave.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnsave.setForeground(new java.awt.Color(102, 0, 102));
        btnsave.setText("SAVE");
        btnsave.setEnabled(false);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        DOBDate.setForeground(new java.awt.Color(102, 0, 102));
        DOBDate.setEnabled(false);
        DOBDate.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N

        lblperinfo.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        lblperinfo.setForeground(new java.awt.Color(102, 0, 102));
        lblperinfo.setText("Personal Information");

        lblcontinfo.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        lblcontinfo.setForeground(new java.awt.Color(102, 0, 102));
        lblcontinfo.setText("Contact Information");

        lbladdress.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lbladdress.setForeground(new java.awt.Color(102, 0, 102));
        lbladdress.setText("Address:");

        jScrollPane1.setForeground(new java.awt.Color(102, 0, 102));

        txtareaddress.setEditable(false);
        txtareaddress.setColumns(20);
        txtareaddress.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtareaddress.setRows(5);
        jScrollPane1.setViewportView(txtareaddress);

        lbledu.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        lbledu.setForeground(new java.awt.Color(102, 0, 102));
        lbledu.setText("Education");

        cityTextJField.setEditable(false);
        cityTextJField.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        cityTextJField.setForeground(new java.awt.Color(102, 0, 102));
        cityTextJField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextJFieldActionPerformed(evt);
            }
        });

        lblcity.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblcity.setForeground(new java.awt.Color(102, 0, 102));
        lblcity.setText("City:");

        lblpincode.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblpincode.setForeground(new java.awt.Color(102, 0, 102));
        lblpincode.setText("Pincode:");

        txtpincode.setEditable(false);
        txtpincode.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtpincode.setForeground(new java.awt.Color(102, 0, 102));
        txtpincode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpincodeActionPerformed(evt);
            }
        });

        cbedu.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        cbedu.setForeground(new java.awt.Color(102, 0, 102));
        cbedu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10th", "12th", "Bachelors", "Masters" }));
        cbedu.setEnabled(false);
        cbedu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbeduActionPerformed(evt);
            }
        });

        lbledu1.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lbledu1.setForeground(new java.awt.Color(102, 0, 102));
        lbledu1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbledu1.setText("Education: ");

        lblschool.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblschool.setForeground(new java.awt.Color(102, 0, 102));
        lblschool.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblschool.setText("School/University: ");

        lbldegree.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lbldegree.setForeground(new java.awt.Color(102, 0, 102));
        lbldegree.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbldegree.setText("Degree:");

        txtschool.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtschool.setForeground(new java.awt.Color(102, 0, 102));
        txtschool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtschoolActionPerformed(evt);
            }
        });

        txtdegree.setEditable(false);
        txtdegree.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtdegree.setForeground(new java.awt.Color(102, 0, 102));
        txtdegree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdegreeActionPerformed(evt);
            }
        });

        btnadd.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnadd.setForeground(new java.awt.Color(102, 0, 102));
        btnadd.setText("ADD");
        btnadd.setEnabled(false);
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        lbllang.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        lbllang.setForeground(new java.awt.Color(102, 0, 102));
        lbllang.setText("Language Proficency & Skills");

        jScrollPane2.setForeground(new java.awt.Color(102, 0, 102));

        txtareaedu.setEditable(false);
        txtareaedu.setColumns(20);
        txtareaedu.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtareaedu.setRows(5);
        jScrollPane2.setViewportView(txtareaedu);

        lbleng.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lbleng.setForeground(new java.awt.Color(102, 0, 102));
        lbleng.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbleng.setText("English: ");

        cbeng.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        cbeng.setForeground(new java.awt.Color(102, 0, 102));
        cbeng.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Excelent", "Good", "Working" }));
        cbeng.setEnabled(false);
        cbeng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbengActionPerformed(evt);
            }
        });

        lblotherlang.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblotherlang.setForeground(new java.awt.Color(102, 0, 102));
        lblotherlang.setText("Other Language:");

        jScrollPane3.setForeground(new java.awt.Color(102, 0, 102));

        txtarealang.setEditable(false);
        txtarealang.setColumns(20);
        txtarealang.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtarealang.setRows(5);
        jScrollPane3.setViewportView(txtarealang);

        txtlang.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtlang.setForeground(new java.awt.Color(102, 0, 102));
        txtlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlangActionPerformed(evt);
            }
        });

        btnlangadd.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnlangadd.setForeground(new java.awt.Color(102, 0, 102));
        btnlangadd.setText("ADD");
        btnlangadd.setEnabled(false);
        btnlangadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlangaddActionPerformed(evt);
            }
        });

        checkboxword.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        checkboxword.setForeground(new java.awt.Color(102, 0, 102));
        checkboxword.setText("MS Word");
        checkboxword.setEnabled(false);
        checkboxword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxwordActionPerformed(evt);
            }
        });

        checkboxexcel.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        checkboxexcel.setForeground(new java.awt.Color(102, 0, 102));
        checkboxexcel.setText("MS Excel");
        checkboxexcel.setEnabled(false);

        checkboxppt.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        checkboxppt.setForeground(new java.awt.Color(102, 0, 102));
        checkboxppt.setText("PowerPoint");
        checkboxppt.setEnabled(false);
        checkboxppt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxpptActionPerformed(evt);
            }
        });

        checkboxemail.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        checkboxemail.setForeground(new java.awt.Color(102, 0, 102));
        checkboxemail.setText("Email Checking");
        checkboxemail.setEnabled(false);

        checkboxweb.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        checkboxweb.setForeground(new java.awt.Color(102, 0, 102));
        checkboxweb.setText("Web Browsing");
        checkboxweb.setEnabled(false);

        lblwrknw.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblwrknw.setForeground(new java.awt.Color(102, 0, 102));
        lblwrknw.setText("Work Knowledge of:");

        jScrollPane4.setForeground(new java.awt.Color(102, 0, 102));

        txtareaskills.setEditable(false);
        txtareaskills.setColumns(20);
        txtareaskills.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        txtareaskills.setRows(5);
        jScrollPane4.setViewportView(txtareaskills);

        lblskill.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        lblskill.setForeground(new java.awt.Color(102, 0, 102));
        lblskill.setText("Skills:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbltitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblperinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblcontinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblconno)
                                        .addComponent(lblemailid)
                                        .addComponent(lbladdress)
                                        .addComponent(lblpincode))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cbgender, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(DOBDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtnationality, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtconno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                            .addComponent(txtemailid, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtpincode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                            .addComponent(cityTextJField, javax.swing.GroupLayout.Alignment.LEADING))))
                                .addComponent(lblnationality)
                                .addComponent(lblname)
                                .addComponent(lbldob)
                                .addComponent(lblsex))
                            .addComponent(lblcity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbleng)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnupdt)
                                .addGap(18, 18, 18)
                                .addComponent(btnsave))
                            .addComponent(lbledu, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbledu1)
                                    .addComponent(lblschool)
                                    .addComponent(lbldegree))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtdegree, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtschool, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbedu, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lbllang, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblwrknw)
                                    .addComponent(lblskill)
                                    .addComponent(lblotherlang))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(121, 121, 121)
                                                .addComponent(btnadd))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(txtlang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addComponent(btnlangadd))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(checkboxppt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(checkboxword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(checkboxexcel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkboxemail)
                                            .addComponent(checkboxweb, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbeng, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnback)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(btnback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbltitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblperinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbledu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblname)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblsex)
                            .addComponent(cbgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DOBDate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(lbldob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblnationality)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbledu1)
                            .addComponent(cbedu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblschool)
                            .addComponent(txtschool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbldegree)
                            .addComponent(txtdegree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnadd)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbllang, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(lblcontinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblemailid)
                    .addComponent(txtemailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbleng)
                    .addComponent(cbeng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblconno)
                            .addComponent(txtconno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbladdress)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcity)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cityTextJField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtpincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblpincode)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblotherlang)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(txtlang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnlangadd))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkboxword)
                            .addComponent(checkboxemail)
                            .addComponent(lblwrknw))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkboxexcel)
                            .addComponent(checkboxweb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkboxppt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblskill))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(210, 210, 210))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        userProcessCont.remove(this);
        Component[] componentArray = userProcessCont.getComponents();
        Component cmp = componentArray[componentArray.length - 1];
        VolunteerWorkAreaJPanel dwjp = (VolunteerWorkAreaJPanel) cmp;
        dwjp.autoPopUserDetails();
        CardLayout lyt = (CardLayout)userProcessCont.getLayout();
        lyt.previous(userProcessCont);
    }//GEN-LAST:event_btnbackActionPerformed
private boolean phonePatternCheck(String phoneNumber) {
        Pattern pat = Pattern.compile("^[0-9]{10}$");
        Matcher mat = pat.matcher(phoneNumber);
        return mat.matches();
    }
    
    private boolean pincodePatternCheck(String pincode) {
        Pattern pat = Pattern.compile("^[0-9]{5}$");
        Matcher mat = pat.matcher(pincode);
        return mat.matches();
    }
    private void txtnationalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnationalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnationalityActionPerformed

    private void txtconnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtconnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtconnoActionPerformed

    private void txtemailidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailidActionPerformed

    private void cbgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbgenderActionPerformed

    }//GEN-LAST:event_cbgenderActionPerformed

    private void btnupdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdtActionPerformed

        txtname.setEditable(true);
        txtnationality.setEditable(true);
        txtemailid.setEditable(true);
        txtconno.setEditable(true);
        DOBDate.setEnabled(true);
        cbgender.setEnabled(true);
        cbeng.setEnabled(true);
        cbedu.setEnabled(true);
        txtareaddress.setEditable(true);
        txtareaedu.setEditable(true);
        txtareaskills.setEditable(true);
        txtpincode.setEditable(true);
        cityTextJField.setEditable(true);
        btnlangadd.setEnabled(true);
        btnadd.setEnabled(true);
        btnupdt.setEnabled(false);
        btnsave.setEnabled(true);
        checkboxword.setEnabled(true);
        checkboxexcel.setEnabled(true);
        checkboxppt.setEnabled(true);
        checkboxweb.setEnabled(true);
        checkboxemail.setEnabled(true);
    }//GEN-LAST:event_btnupdtActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        String Nm = txtname.getText();
        if(Nm == null || Nm.equals("")){
            JOptionPane.showMessageDialog(null, "Name mandatory");
            return;
        }
        userAcc.getEmp().setName(Nm);

        String sex = (String) cbgender.getSelectedItem();
        if(sex == null || sex.equals("")){
            JOptionPane.showMessageDialog(null, "Gender type mandatory");
            return;
        }
        userAcc.getEmp().setSex(sex);

        Date birthdate =  (Date) DOBDate.getDate();
        if(birthdate == null){
            JOptionPane.showMessageDialog(null, "Date of Birth mandatory");
            return;
        }
        if(birthdate.after(new Date())){
            JOptionPane.showMessageDialog(null, "select a valid Date");
            return;
        }
        LocalDate  db= birthdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        userAcc.getEmp().setDob(db);

        String Nat = txtnationality.getText();
        if(Nat == null || Nat.equals("")){
            JOptionPane.showMessageDialog(null, "Nationality mandatory");
            return;
        }

        String EID = txtemailid.getText();
        if(EID  == null ||EID .equals("")){
            JOptionPane.showMessageDialog(null, "Email ID mandatory");
            return;
        }
        userAcc.getEmp().setEmail(EID);

        String conNo = txtconno.getText();
        if(conNo == null || conNo.equals("")){
            JOptionPane.showMessageDialog(null, "Contact Number mandatory");
            return;
        }
        if(!phonePatternCheck(conNo)){
            JOptionPane.showMessageDialog(null, "Enter a valid Phone Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        userAcc.getEmp().setPhNo(conNo);

        String add = txtareaddress.getText();
        if(add == null || add.equals("")){
            JOptionPane.showMessageDialog(null, "Address mandatory");
            return;
        }
        userAcc.getVolunteer().setAddress(add);

        String pcode = txtpincode.getText();
        if(pcode == null || pcode.equals("")){
            JOptionPane.showMessageDialog(null, "Pincode mandatory");
            return;
        }
        if(!pincodePatternCheck(pcode)){
            JOptionPane.showMessageDialog(null, "Please enter a valid Pincode", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        userAcc.getVolunteer().setPincode(pcode);

        String cty = cityTextJField.getText();
        if(cty == null || cty.equals("")){
            JOptionPane.showMessageDialog(null, "City mandatory");
            return;
        }

        String eng = (String) cbeng.getSelectedItem();
        if(eng == null || eng.equals("")){
            JOptionPane.showMessageDialog(null, "English option mandatory");
            return;
        }
        userAcc.getVolunteer().setEngProficent(eng);

        String sk = txtareaskills.getText();
        if(sk == null || sk.equals("")){
            JOptionPane.showMessageDialog(null, "Skills mandatory");
            return;
        }
        userAcc.getVolunteer().setSkills(sk);

        if(checkboxword.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("MS Word");
        }
        if(checkboxexcel.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("MS Excel");
        }
        if(checkboxppt.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("PowerPoint");
        }
        if(checkboxemail.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("Email Checking");
        }
        if(checkboxweb.isSelected() == true){
            userAcc.getVolunteer().getExpertise().add("Web Browsing");
        }

        txtname.setEditable(false);
        txtnationality.setEditable(false);
        txtemailid.setEditable(false);
        txtconno.setEditable(false);
        DOBDate.setEnabled(false);
        cbgender.setEnabled(false);
        cbeng.setEnabled(false);
        cbedu.setEnabled(false);
        txtareaddress.setEditable(false);
        txtareaedu.setEditable(false);
        txtareaskills.setEditable(false);
        txtpincode.setEditable(false);
        cityTextJField.setEditable(false);
        btnlangadd.setEnabled(false);
        btnadd.setEnabled(false);
        btnupdt.setEnabled(true);
        btnsave.setEnabled(false);
        checkboxword.setEnabled(false);
        checkboxexcel.setEnabled(false);
        checkboxppt.setEnabled(false);
        checkboxweb.setEnabled(false);
        checkboxemail.setEnabled(false);

    }//GEN-LAST:event_btnsaveActionPerformed

    private void cityTextJFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextJFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextJFieldActionPerformed

    private void txtpincodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpincodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpincodeActionPerformed

    private void cbeduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbeduActionPerformed
        // TODO add your handling code here:
        if(cbedu.getSelectedItem().equals("Bachelors") || cbedu.getSelectedItem().equals("Masters")){
            txtdegree.setEditable(true);
        }
    }//GEN-LAST:event_cbeduActionPerformed

    private void txtschoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtschoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtschoolActionPerformed

    private void txtdegreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdegreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdegreeActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed

        String edu = (String) cbedu.getSelectedItem();
        if(edu == null || edu.equals("")){
            JOptionPane.showMessageDialog(null, "Education type mandatory");
            return;
        }

        String sch = txtschool.getText();
        if(sch == null || sch.equals("")){
            JOptionPane.showMessageDialog(null, "School/University mandatory");
            return;
        }

        if(edu.equals("Bachelors") || edu.equals("Masters")) {

            String deg = txtdegree.getText();
            if(deg == null || deg.equals("")){
                JOptionPane.showMessageDialog(null, "Degree mandatory");
                return;
            }

            String sd = sch + " [" + deg + "] ";

            userAcc.getVolunteer().getEduList().put(edu, sd);
            populateEdu();

        }

        else if (edu.equals("10th") || edu.equals("12th")){

            userAcc.getVolunteer().getEduList().put(edu, sch);
            populateEdu();

        }

        txtschool.setText("");
        txtdegree.setText("");

    }//GEN-LAST:event_btnaddActionPerformed

    private void cbengActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbengActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbengActionPerformed

    private void txtlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlangActionPerformed

    private void btnlangaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlangaddActionPerformed
        userAcc.getVolunteer().getLanguages().add(txtlang.getText());
        languagepopulate();
        txtlang.setText("");
    }//GEN-LAST:event_btnlangaddActionPerformed

    private void checkboxwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxwordActionPerformed

    private void checkboxpptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxpptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxpptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DOBDate;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnlangadd;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdt;
    private javax.swing.JComboBox cbedu;
    private javax.swing.JComboBox cbeng;
    private javax.swing.JComboBox cbgender;
    private javax.swing.JCheckBox checkboxemail;
    private javax.swing.JCheckBox checkboxexcel;
    private javax.swing.JCheckBox checkboxppt;
    private javax.swing.JCheckBox checkboxweb;
    private javax.swing.JCheckBox checkboxword;
    private javax.swing.JTextField cityTextJField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbladdress;
    private javax.swing.JLabel lblcity;
    private javax.swing.JLabel lblconno;
    private javax.swing.JLabel lblcontinfo;
    private javax.swing.JLabel lbldegree;
    private javax.swing.JLabel lbldob;
    private javax.swing.JLabel lbledu;
    private javax.swing.JLabel lbledu1;
    private javax.swing.JLabel lblemailid;
    private javax.swing.JLabel lbleng;
    private javax.swing.JLabel lbllang;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblnationality;
    private javax.swing.JLabel lblotherlang;
    private javax.swing.JLabel lblperinfo;
    private javax.swing.JLabel lblpincode;
    private javax.swing.JLabel lblschool;
    private javax.swing.JLabel lblsex;
    private javax.swing.JLabel lblskill;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JLabel lblwrknw;
    private javax.swing.JTextArea txtareaddress;
    private javax.swing.JTextArea txtareaedu;
    private javax.swing.JTextArea txtarealang;
    private javax.swing.JTextArea txtareaskills;
    private javax.swing.JTextField txtconno;
    private javax.swing.JTextField txtdegree;
    private javax.swing.JTextField txtemailid;
    private javax.swing.JTextField txtlang;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnationality;
    private javax.swing.JTextField txtpincode;
    private javax.swing.JTextField txtschool;
    // End of variables declaration//GEN-END:variables
}
