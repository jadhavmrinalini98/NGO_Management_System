/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PharmacistRole;

import UI.DoctorRole.*;
import Model.EcoSystem;
import Model.Enterprise.Enterprise;
import Model.Network.Network;
import Model.Organization.DoctorOrg;
import Model.Organization.HealthOrg;
import Model.Organization.Organisation;
import Model.Organization.PharmacyOrg;
import Model.Organization.TransportOrg;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.TutorVolunteerWorkReq;
import Model.WorkQueue.HospitalDoctorWorkReq;
import Model.WorkQueue.HospitalPharmacyWorkReq;
import Model.WorkQueue.LaboratoryTestWorkReq;
import Model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Mrinalini
 */
public class NewRequestPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private PharmacyOrg org;
    private Enterprise ent;
    private UserAccount ua;
    private Network net;
    /**
     * Creates new form NewRequestPanel
     */
    public NewRequestPanel(JPanel userProcessContainer, UserAccount acc, PharmacyOrg org,Network net, Enterprise ent) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.org = (PharmacyOrg)org;
        this.ent = ent;
        this.ua = acc;
        this.net=net;
        autoPopMedList();
    }
    
    public void autoPopMedList() {
        DefaultTableModel mdl = (DefaultTableModel)JM_tblMedList.getModel();
        mdl.setRowCount(0);    
        SimpleDateFormat fmt = new SimpleDateFormat("dd MMM, yyyy");
        
        for (Iterator<WorkRequest> wr = org.getWorkQueue().getWrList().iterator(); wr.hasNext();) {
            WorkRequest workRequest = wr.next();
           if(workRequest instanceof HospitalPharmacyWorkReq){
               HospitalPharmacyWorkReq req = (HospitalPharmacyWorkReq) workRequest;
                if(req.getStatus().equalsIgnoreCase("sent"))
                {
                    Object[] row = new Object[5];
                    row[0] = req;
                    row[1]=req.getNgo();
                    row[3]=req.getMedList();
                    row[2]=req.getSender();
                    row[4] = req.getStatus();
                    mdl.addRow(row);
                }
               
           }
            
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JM_jLabel25 = new javax.swing.JLabel();
        JM_btnBack = new javax.swing.JButton();
        JM_jScrollPane5 = new javax.swing.JScrollPane();
        JM_tblMedList = new javax.swing.JTable();
        JM_btnAssignToMe = new javax.swing.JButton();
        JM_btnViewMedList = new javax.swing.JButton();
        JM_jScrollPane4 = new javax.swing.JScrollPane();
        JM_txtMessage = new javax.swing.JTextArea();
        JM_btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        JM_jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        JM_jLabel25.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 24)); // NOI18N
        JM_jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        JM_jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JM_jLabel25.setText("New Medicine Requests");

        JM_btnBack.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnBack.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnBack.setText("<<<Back");
        JM_btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnBackActionPerformed(evt);
            }
        });

        JM_jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
        JM_jScrollPane5.setForeground(new java.awt.Color(102, 0, 102));

        JM_tblMedList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NGO", "Sender", "Medicine List", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JM_jScrollPane5.setViewportView(JM_tblMedList);

        JM_btnAssignToMe.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnAssignToMe.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnAssignToMe.setText("Assign to me");
        JM_btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnAssignToMeActionPerformed(evt);
            }
        });

        JM_btnViewMedList.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnViewMedList.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnViewMedList.setText("View Medicine List");
        JM_btnViewMedList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnViewMedListActionPerformed(evt);
            }
        });

        JM_jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        JM_jScrollPane4.setForeground(new java.awt.Color(102, 0, 102));

        JM_txtMessage.setColumns(20);
        JM_txtMessage.setFont(new java.awt.Font(".SF NS Mono", 0, 14)); // NOI18N
        JM_txtMessage.setRows(5);
        JM_jScrollPane4.setViewportView(JM_txtMessage);

        JM_btnRefresh.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 14)); // NOI18N
        JM_btnRefresh.setForeground(new java.awt.Color(0, 153, 153));
        JM_btnRefresh.setText("Refresh");
        JM_btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JM_btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JM_jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(JM_btnAssignToMe)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JM_btnViewMedList))
                        .addComponent(JM_jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(239, 239, 239))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JM_jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 1091, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(JM_btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(930, Short.MAX_VALUE)
                    .addComponent(JM_btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(95, 95, 95)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(JM_jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JM_btnBack)
                .addGap(16, 16, 16)
                .addComponent(JM_jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JM_btnAssignToMe, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JM_btnViewMedList, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(JM_jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(139, 139, 139)
                    .addComponent(JM_btnRefresh)
                    .addContainerGap(573, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JM_btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_JM_btnBackActionPerformed

    private void JM_btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnAssignToMeActionPerformed
        // TODO add your handling code here:
        int selectedRow = JM_tblMedList.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Make row selection");
            return;
        }
        HospitalPharmacyWorkReq req = (HospitalPharmacyWorkReq)JM_tblMedList.getValueAt(selectedRow, 0);
        req.setReceiver(ua);
        req.setStatus("Assigned");
        ua.getWorkQueue().getWrList().add(req);
        JOptionPane.showMessageDialog(null, "Successful assignment of medical request ");
        autoPopMedList();
    }//GEN-LAST:event_JM_btnAssignToMeActionPerformed

    private void JM_btnViewMedListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnViewMedListActionPerformed
        // TODO add your handling code here:
        int selectedRow = JM_tblMedList.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Make row selection");
            return;
        }
        HospitalPharmacyWorkReq req = (HospitalPharmacyWorkReq)JM_tblMedList.getValueAt(selectedRow, 0);
        JM_txtMessage.setText(req.getMedList()+"");
        JM_txtMessage.setEditable(false);

    }//GEN-LAST:event_JM_btnViewMedListActionPerformed

    private void JM_btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JM_btnRefreshActionPerformed
        // TODO add your handling code here:
        autoPopMedList(); 
        JM_txtMessage.setText("");
    }//GEN-LAST:event_JM_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JM_btnAssignToMe;
    private javax.swing.JButton JM_btnBack;
    private javax.swing.JButton JM_btnRefresh;
    private javax.swing.JButton JM_btnViewMedList;
    private javax.swing.JLabel JM_jLabel25;
    private javax.swing.JScrollPane JM_jScrollPane4;
    private javax.swing.JScrollPane JM_jScrollPane5;
    private javax.swing.JTable JM_tblMedList;
    private javax.swing.JTextArea JM_txtMessage;
    // End of variables declaration//GEN-END:variables
}
